apply plugin: 'groovy'
apply plugin: 'maven'
apply from: 'installation/apply-local.groovy'

configurations {
	releaseArtifacts {}
	installers {}
	latestInstallers {}
	deployerJars {}
}

repositories {
	mavenCentral()
	mavenRepo url: 'http://m2repo.spockframework.org/snapshots'
}

dependencies {
	compile gradleApi(),
			'org.ajoberstar:gradle-git:0.4.0'
	groovy localGroovy()
	testCompile('org.spockframework:spock-core:0.5-groovy-1.8') { exclude group: 'org.codehaus.groovy' }
	testCompile 'junit:junit:4.10'
	deployerJars 'org.apache.maven.wagon:wagon-ftp:2.2'
}

// This updates the apply script with the new version.
updateVersion << {
	def applyFile = new File("installation", "apply.groovy")
	def readmeFile = new File("README.md")
	def oldVersion = project.getProperty("release.oldVersion")
	def newVersion = project.getProperty("release.newVersion")
	ant.replace(file: applyFile, token: "${group}:${name}:${oldVersion}", value: "${group}:${name}:${newVersion}")
	ant.replaceregexp(file: readmeFile, match: "Current Version: .*?\$", replace: "Current Version: ${oldVersion}", byline: true)
	ant.replaceregexp(file: readmeFile, match: "gradle-release/\\d+\\.\\d+/apply.groovy", replace: "gradle-release/${oldVersion}/apply.groovy", byline: true)
}

artifacts {
	releaseArtifacts jar
	installers file('installation/apply.groovy')
	latestInstallers file('installation/apply.groovy')
}

uploadReleaseArtifacts {
	repositories {
		/*
		ivy {
			url = btUrl
			credentials {
				username btUser
				password btPass
			}
		}
		*/
		mavenDeployer {
			configuration = configurations.deployerJars
			repository(url: releaseRepoUrl) { authentication(userName: releaseRepoUser, password: releaseRepoPass) }
		}
	}
}

uploadInstallers {
	repositories {
		add(new org.apache.ivy.plugins.resolver.SFTPResolver()) {
			host = releaseRepoHost
			addArtifactPattern "${releaseRepoBase}/[module]/[revision]/[artifact].[ext]"
		}
	}
}

uploadLatestInstallers {
	repositories {
		add(new org.apache.ivy.plugins.resolver.SFTPResolver()) {
			host = releaseRepoHost
			addArtifactPattern "${releaseRepoBase}/[module]/[artifact].[ext]"
		}
	}
}

createReleaseTag.dependsOn uploadReleaseArtifacts
createReleaseTag.dependsOn uploadInstallers